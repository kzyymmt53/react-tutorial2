{"ast":null,"code":"var _jsxFileName = \"/Users/yamamotok96/react_tutorial2/react-tutorial2/reactRouteSampleApp/09-time-to-practice-starting-code/src/pages/QuateDetail.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUATES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learing React is fun\"\n}, {\n  id: \"q2\",\n  author: \"Maxi\",\n  text: \"Learing React is Great\"\n}];\nconst QuateDetail = () => {\n  _s();\n  const match = useRouteMatch();\n  const param = useParams();\n  const {\n    quoteId\n  } = param;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getSingleQuote, true);\n  const quote = DUMMY_QUATES.find(quote => quote.id === param.quiteId);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  if (!loadedQuotes.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuotes.text,\n      author: loadedQuotes.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(QuateDetail, \"1IuCzxsrawQ5OX9qtOVXVmh1Hzs=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n_c = QuateDetail;\nexport default QuateDetail;\nvar _c;\n$RefreshReg$(_c, \"QuateDetail\");","map":{"version":3,"names":["Fragment","useEffect","useParams","Route","Link","useRouteMatch","HighlightedQuote","Comments","useHttp","getSingleQuote","LoadingSpinner","DUMMY_QUATES","id","author","text","QuateDetail","match","param","quoteId","sendRequest","status","data","loadedQuotes","error","quote","find","quiteId","path","url"],"sources":["/Users/yamamotok96/react_tutorial2/react-tutorial2/reactRouteSampleApp/09-time-to-practice-starting-code/src/pages/QuateDetail.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst DUMMY_QUATES = [\n  { id: \"q1\", author: \"Max\", text: \"Learing React is fun\" },\n  { id: \"q2\", author: \"Maxi\", text: \"Learing React is Great\" },\n];\n\nconst QuateDetail = () => {\n    const match = useRouteMatch();\n    const param = useParams();\n    const { quoteId } = param;\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getSingleQuote, true);\n\n    const quote = DUMMY_QUATES.find((quote) => quote.id === param.quiteId);\n    \n    useEffect(() => {\n        sendRequest(quoteId);\n    }, [sendRequest, quoteId]);\n\n    if (status === \"pending\") {\n        return <div className=\"centered\">\n            <LoadingSpinner />\n        </div>;\n    }\n\n    if (error) {\n        return <div className=\"centered\">{error}</div>;\n    }\n\n    if (!loadedQuotes.text) {\n        return <p>No Quote</p>\n    }\n\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuotes.text} author={loadedQuotes.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuateDetail;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAExE,OAAOC,gBAAgB,MAAM,uCAAuC;AAEpE,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,YAAY;AAC3C,OAAOC,cAAc,MAAM,iCAAiC;AAAC;AAE7D,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAuB,CAAC,EACzD;EAAEF,EAAE,EAAE,IAAI;EAAEC,MAAM,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAyB,CAAC,CAC7D;AAED,MAAMC,WAAW,GAAG,MAAM;EAAA;EACtB,MAAMC,KAAK,GAAGX,aAAa,EAAE;EAC7B,MAAMY,KAAK,GAAGf,SAAS,EAAE;EACzB,MAAM;IAAEgB;EAAQ,CAAC,GAAGD,KAAK;EACzB,MAAM;IAAEE,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC,YAAY;IAAEC;EAAM,CAAC,GAAGf,OAAO,CAACC,cAAc,EAAE,IAAI,CAAC;EAExF,MAAMe,KAAK,GAAGb,YAAY,CAACc,IAAI,CAAED,KAAK,IAAKA,KAAK,CAACZ,EAAE,KAAKK,KAAK,CAACS,OAAO,CAAC;EAEtEzB,SAAS,CAAC,MAAM;IACZkB,WAAW,CAACD,OAAO,CAAC;EACxB,CAAC,EAAE,CAACC,WAAW,EAAED,OAAO,CAAC,CAAC;EAE1B,IAAIE,MAAM,KAAK,SAAS,EAAE;IACtB,oBAAO;MAAK,SAAS,EAAC,UAAU;MAAA,uBAC5B,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAChB;EACV;EAEA,IAAIG,KAAK,EAAE;IACP,oBAAO;MAAK,SAAS,EAAC,UAAU;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAO;EAClD;EAEA,IAAI,CAACD,YAAY,CAACR,IAAI,EAAE;IACpB,oBAAO;MAAA,UAAG;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAI;EAC1B;EAGF,oBACE,QAAC,QAAQ;IAAA,wBACP,QAAC,gBAAgB;MAAC,IAAI,EAAEQ,YAAY,CAACR,IAAK;MAAC,MAAM,EAAEQ,YAAY,CAACT;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1E,QAAC,KAAK;MAAC,IAAI,EAAEG,KAAK,CAACW,IAAK;MAAC,KAAK;MAAA,uBAC5B;QAAK,SAAS,EAAC,UAAU;QAAA,uBACvB,QAAC,IAAI;UAAC,SAAS,EAAC,WAAW;UAAC,EAAE,EAAG,GAAEX,KAAK,CAACY,GAAI,WAAW;UAAA,UAAC;QAEzD;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA,QACA,eAER,QAAC,KAAK;MAAC,IAAI,EAAG,GAAEZ,KAAK,CAACW,IAAK,WAAW;MAAA,uBACpC,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACN;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEf,CAAC;AAAC,GA3CIZ,WAAW;EAAA,QACCV,aAAa,EACbH,SAAS,EAEoCM,OAAO;AAAA;AAAA,KAJhEO,WAAW;AA6CjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}